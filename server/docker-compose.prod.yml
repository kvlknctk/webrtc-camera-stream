version: '3.8'

services:
  # Production optimized version
  app:
    image: webrtc-stream-server:latest
    container_name: webrtc-app
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=2048
    volumes:
      - ./logs:/var/log
      - ./public:/app/public:ro
    networks:
      - webrtc-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  nginx:
    image: nginx:alpine
    container_name: webrtc-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/letsencrypt:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - webrtc-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: webrtc-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - webrtc-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  coturn:
    image: coturn/coturn:alpine
    container_name: webrtc-turn
    network_mode: host
    command: |
      -n
      --listening-port=3478
      --tls-listening-port=5349
      --external-ip=${SERVER_IP}
      --realm=${SERVER_DOMAIN}
      --fingerprint
      --lt-cred-mech
      --user=turn:${WEBRTC_TURN_PASSWORD}
      --no-cli
      --no-tlsv1
      --no-tlsv1_1
      --log-file=stdout
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  # Monitoring (opsiyonel)
  prometheus:
    image: prom/prometheus:latest
    container_name: webrtc-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - webrtc-network
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: webrtc-grafana
    ports:
      - "3030:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_SERVER_ROOT_URL=http://${SERVER_DOMAIN}:3030
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
    networks:
      - webrtc-network
    restart: always

networks:
  webrtc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local